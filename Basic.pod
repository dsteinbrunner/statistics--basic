=head1 NAME

    Statistics::Basic A collection of very basic statistics formulae for vectors.

=head1 SYNOPSIS

    # for use with one vector:
    Statistics::Basic::Mean;
    Statistics::Basic::Median;
    Statistics::Basic::Mode;
    Statistics::Basic::Variance;
    Statistics::Basic::StdDev;

    # for use with two vectors:
    Statistics::Basic::Covariance;
    Statistics::Basic::Correlation;

=head1 EXAMPLES

    my $mean = Statistics::Basic::Mean->new($array_ref)->query;

    print "$mean\n";  # hooray

That works, but I needed to calculate a LOT of means for a lot of arrays of the
same size.  Furthermore, I needed them to operate FIFO style.  So, they do:

    my $mo = new Statistics::Basic::Mean([1..3]);

    print $mo->query, "\n"; # the avearge of 1, 2, 3 is 2
          $mo->insert(4);   # Keeps the vector the same size automatically
    print $mo->query, "\n"; # so, the average of 2, 3, 4 is 3

You might need to keep a running average, so I included a growing insert:

          $mo->ginsert(5);  # Expands the vector size by one and appends a 5
    print $mo->query, "\n"; # so, the average is of 2, 3, 4, 5 is 7/2

And last, you might need the mean of [3, 7] after all the above

          $mo->set_vector([2,3]);  # *poof*, the vector is 2, 3!
    print $mo->query, "\n"; # and the average is now 5/2!  Tadda!

These functions all work pretty much the same for ::StdDev and ::Variance but
they work slightly differently for Covariance and Correlation.

Not surprisingly, the correlation of [1..3] and [1..3] is 1.0:

    my $co = new Statistics::Basic::Correlation( [1..3], [1..3] );

    print $co->query, "\n";

But the correlation of [1..3, 7] and [1..3, 5] is less than 1:

          $co->ginsert( 7, 5 );
    print $co->query, "\n";

=head1 BUGS

Besides the lack of documentation?  Well, I'm sure there's a bunch.
I've tried to come up with a comprehensive suite of tests, but it's
difficult to think of everything.

If you spot any bugs, please tell me.

=head1 ENV VARIABLES

=head2 DEBUG

Try setting $ENV{DEBUG}=1; or $ENV{DEBUG}=2; to see the internals.

Also, from your bash prompt you can 'DEBUG=1 perl ./myprog.pl' to
enable debugging dynamically.

=head2 UNBIAS

This module uses the sum(X - mean(X))/N definition of variance.
If you wish to use the unbiased, sum(X-mean(X)/(N-1) definition, then 
set the $ENV{UNBIAS}=1;

This feature was requested by Robert McGehee <xxxxxxxx@wso.williams.edu>.

=head1 AUTHOR

Paul Miller <jettero@cpan.org>

I am using this software in my own projects...  If you find bugs, please
please please let me know. :) Actually, let me know if you find it handy at
all.  Half the fun of releasing this stuff is knowing that people use it.

=head1 COPYRIGHT

LGPL!  I included a lgpl-2.1.txt.gz for your reading enjoyment.

=head1 SEE ALSO

Most of the documentation is very thin.  Sorry.  The modules with their
own documentation (no matter how thin) are listed below.

L<Statistics::Basic::LeastSquareFit>
