diff -ruN Statistics-Basic-0.41.3/Basic/Median.pm Statistics-Basic-0.41.3.orien/Basic/Median.pm
--- Statistics-Basic-0.41.3/Basic/Median.pm	1969-12-31 19:00:00.000000000 -0500
+++ Statistics-Basic-0.41.3.orien/Basic/Median.pm	2006-01-25 14:48:49.000000000 -0500
@@ -0,0 +1,150 @@
+# vi:fdm=marker fdl=0
+# $Id: sbm.patch,v 1.1 2006-01-25 22:20:41 jettero Exp $ 
+
+package Statistics::Basic::Median;
+
+use strict;
+no warnings;
+use Carp;
+
+use Statistics::Basic::Vector;
+
+1;
+
+# new {{{
+sub new {
+    my $this     = shift;
+    my $vector   = shift;
+    my $set_size = shift;
+
+    warn "[new median]\n" if $ENV{DEBUG} >= 2;
+
+    $this = bless {}, $this;
+
+    if( ref($vector) eq "ARRAY" ) {
+        $this->{v} = new Statistics::Basic::Vector( $vector, $set_size );
+    } elsif( ref($vector) eq "Statistics::Basic::Vector" ) {
+        $this->{v} = $vector;
+        $this->{v}->set_size( $set_size ) if defined $set_size;
+    } elsif( defined($vector) ) {
+        croak "argument to new() too strange";
+    } else {
+        $this->{v} = new Statistics::Basic::Vector;
+    }
+
+    $this->recalc;
+
+    return $this;
+}
+# }}}
+# recalc {{{
+sub recalc {
+    my $this        = shift;
+    my $cardinality = $this->{v}->size;
+
+    unless( $cardinality > 0 ) {
+        $this->{median} = undef;
+
+        return;
+    }
+
+    my @v = (sort {$a <=> $b} ($this->{'v'}->query()));
+    my $center = int($cardinality/2);
+    if ($cardinality%2) {
+      $this->{'median'} = $v[$center];
+    } else {
+      $this->{'median'} = ($v[$center] + $v[$center-1]) / 2.0;
+    }
+
+    warn "[recalc median] vector[int($cardinality/2)] = $this->{median}\n" if $ENV{DEBUG};
+}
+# }}}
+# query {{{
+sub query {
+    my $this = shift;
+
+    return $this->{'median'};
+}
+# }}}
+
+# size {{{
+sub size {
+    my $this = shift;
+
+    return $this->{v}->size;
+}
+# }}}
+# set_size {{{
+sub set_size {
+    my $this = shift;
+    my $size = shift;
+
+    warn "[set_size median] $size\n" if $ENV{DEBUG};
+    croak "strange size" if $size < 1;
+
+    $this->{v}->set_size($size);
+    $this->recalc;
+}
+# }}}
+# set_vector {{{
+sub set_vector {
+    my $this = shift;
+
+    warn "[set_vector median]\n" if $ENV{DEBUG};
+
+    $this->{v}->set_vector(@_);
+    $this->recalc;
+}
+# }}}
+# insert {{{
+sub insert {
+    my $this = shift;
+
+    warn "[insert median]\n" if $ENV{DEBUG};
+
+    $this->{v}->insert(@_);
+    $this->recalc;
+}
+# }}}
+# ginsert {{{
+sub ginsert {
+    my $this = shift;
+
+    warn "[ginsert median]\n" if $ENV{DEBUG};
+
+    $this->{v}->ginsert(@_);
+    $this->recalc;
+}
+# }}}
+
+__END__
+# Below is stub documentation for your module. You better edit it!
+
+=head1 NAME
+
+    Statistics::Basic::Median
+
+=head1 SYNOPSIS
+
+    A machine to calculate the median of a given vector.
+
+=head1 ENV VARIABLES
+
+=head2 DEBUG
+
+   Try setting $ENV{DEBUG}=1; or $ENV{DEBUG}=2; to see the internals.
+
+   Also, from your bash prompt you can 'DEBUG=1 perl ./myprog.pl' to
+   enable debugging dynamically.
+
+=head1 AUTHOR
+
+    Please contact me with ANY suggestions, no matter how pedantic.
+
+    Jettero Heller <japh@voltar-confed.org>
+
+=head1 SEE ALSO
+
+    perl(1)
+
+=cut
diff -ruN Statistics-Basic-0.41.3/Basic/Mode.pm Statistics-Basic-0.41.3.orien/Basic/Mode.pm
--- Statistics-Basic-0.41.3/Basic/Mode.pm	1969-12-31 19:00:00.000000000 -0500
+++ Statistics-Basic-0.41.3.orien/Basic/Mode.pm	2006-01-25 15:46:59.000000000 -0500
@@ -0,0 +1,156 @@
+# vi:fdm=marker fdl=0
+# $Id: sbm.patch,v 1.1 2006-01-25 22:20:41 jettero Exp $ 
+
+package Statistics::Basic::Mode;
+
+use strict;
+no warnings;
+use Carp;
+
+use Statistics::Basic::Vector;
+
+1;
+
+# new {{{
+sub new {
+    my $this     = shift;
+    my $vector   = shift;
+    my $set_size = shift;
+
+    warn "[new mode]\n" if $ENV{DEBUG} >= 2;
+
+    $this = bless {}, $this;
+
+    if( ref($vector) eq "ARRAY" ) {
+        $this->{v} = new Statistics::Basic::Vector( $vector, $set_size );
+    } elsif( ref($vector) eq "Statistics::Basic::Vector" ) {
+        $this->{v} = $vector;
+        $this->{v}->set_size( $set_size ) if defined $set_size;
+    } elsif( defined($vector) ) {
+        croak "argument to new() too strange";
+    } else {
+        $this->{v} = new Statistics::Basic::Vector;
+    }
+
+    $this->recalc;
+
+    return $this;
+}
+# }}}
+# recalc {{{
+sub recalc {
+    my $this        = shift;
+    my $cardinality = $this->{v}->size;
+    my %mode;
+    my $mode_count  = 0;
+
+    unless( $cardinality > 0 ) {
+        $this->{mode} = undef;
+
+        return;
+    }
+
+    $this->{'mode'} = undef;
+    foreach my $val ($this->{'v'}->query()) {
+      $mode{$val}++;
+      if (not defined $this->{'mode'}) {
+        $this->{'mode'} = $val;
+        $mode_count = $mode{$val};
+      } elsif ($mode{$val} > $mode_count) {
+        $this->{'mode'} = $val;
+        $mode_count = $mode{$val};
+      }
+    }
+
+    warn "[recalc mode] count of $this->{mode} = $mode{$this->{mode}}\n" if $ENV{DEBUG};
+}
+# }}}
+# query {{{
+sub query {
+    my $this = shift;
+
+    return $this->{mode};
+}
+# }}}
+
+# size {{{
+sub size {
+    my $this = shift;
+
+    return $this->{v}->size;
+}
+# }}}
+# set_size {{{
+sub set_size {
+    my $this = shift;
+    my $size = shift;
+
+    warn "[set_size mode] $size\n" if $ENV{DEBUG};
+    croak "strange size" if $size < 1;
+
+    $this->{v}->set_size($size);
+    $this->recalc;
+}
+# }}}
+# set_vector {{{
+sub set_vector {
+    my $this = shift;
+
+    warn "[set_vector mode]\n" if $ENV{DEBUG};
+
+    $this->{v}->set_vector(@_);
+    $this->recalc;
+}
+# }}}
+# insert {{{
+sub insert {
+    my $this = shift;
+
+    warn "[insert mode]\n" if $ENV{DEBUG};
+
+    $this->{v}->insert(@_);
+    $this->recalc;
+}
+# }}}
+# ginsert {{{
+sub ginsert {
+    my $this = shift;
+
+    warn "[ginsert mode]\n" if $ENV{DEBUG};
+
+    $this->{v}->ginsert(@_);
+    $this->recalc;
+}
+# }}}
+
+__END__
+# Below is stub documentation for your module. You better edit it!
+
+=head1 NAME
+
+    Statistics::Basic::Mode
+
+=head1 SYNOPSIS
+
+    A machine to calculate the mode of a given vector.
+
+=head1 ENV VARIABLES
+
+=head2 DEBUG
+
+   Try setting $ENV{DEBUG}=1; or $ENV{DEBUG}=2; to see the internals.
+
+   Also, from your bash prompt you can 'DEBUG=1 perl ./myprog.pl' to
+   enable debugging dynamically.
+
+=head1 AUTHOR
+
+    Please contact me with ANY suggestions, no matter how pedantic.
+
+    Jettero Heller <japh@voltar-confed.org>
+
+=head1 SEE ALSO
+
+    perl(1)
+
+=cut
diff -ruN Statistics-Basic-0.41.3/Basic.pm Statistics-Basic-0.41.3.orien/Basic.pm
--- Statistics-Basic-0.41.3/Basic.pm	2004-03-25 12:52:09.000000000 -0500
+++ Statistics-Basic-0.41.3.orien/Basic.pm	2006-01-25 15:50:10.000000000 -0500
@@ -22,6 +22,8 @@
 
     # for use with one vector:
     Statistics::Basic::Mean;
+    Statistics::Basic::Median;
+    Statistics::Basic::Mode;
     Statistics::Basic::Variance;
     Statistics::Basic::StdDev;
 
diff -ruN Statistics-Basic-0.41.3/MANIFEST Statistics-Basic-0.41.3.orien/MANIFEST
--- Statistics-Basic-0.41.3/MANIFEST	2004-03-25 12:49:09.000000000 -0500
+++ Statistics-Basic-0.41.3.orien/MANIFEST	2006-01-25 13:57:40.000000000 -0500
@@ -12,6 +12,8 @@
 Changes
 Basic/Vector.pm
 Basic/Mean.pm
+Basic/Median.pm
+Basic/Mode.pm
 Basic/Variance.pm
 Basic/StdDev.pm
 Basic/CoVariance.pm
diff -ruN Statistics-Basic-0.41.3/t/10_median.t Statistics-Basic-0.41.3.orien/t/10_median.t
--- Statistics-Basic-0.41.3/t/10_median.t	1969-12-31 19:00:00.000000000 -0500
+++ Statistics-Basic-0.41.3.orien/t/10_median.t	2006-01-25 14:49:23.000000000 -0500
@@ -0,0 +1,28 @@
+# vi:fdm=marker fdl=0 syntax=perl:
+# $Id: sbm.patch,v 1.1 2006-01-25 22:20:41 jettero Exp $
+
+use strict;
+use Test;
+use Statistics::Basic::Median;
+
+plan tests => 6;
+
+my  $sbm = new Statistics::Basic::Median([1..3]);
+
+ok( $sbm->query == 2 );
+
+    $sbm->insert( 10 );
+ok( $sbm->query == 3 );
+
+    $sbm->set_size( 5 );
+ok( $sbm->query == 2 );
+
+    $sbm->ginsert( 9 );
+ok( $sbm->query == 2.5 );
+
+    $sbm->set_vector( [2, 3..5, 7, 0, 0] );
+ok( $sbm->query == 3 );
+
+my  $j = new Statistics::Basic::Median;
+    $j->set_vector( [1 .. 3] );
+ok( $j->query == 2 );
diff -ruN Statistics-Basic-0.41.3/t/10_mode.t Statistics-Basic-0.41.3.orien/t/10_mode.t
--- Statistics-Basic-0.41.3/t/10_mode.t	1969-12-31 19:00:00.000000000 -0500
+++ Statistics-Basic-0.41.3.orien/t/10_mode.t	2006-01-25 15:46:41.000000000 -0500
@@ -0,0 +1,28 @@
+# vi:fdm=marker fdl=0 syntax=perl:
+# $Id: sbm.patch,v 1.1 2006-01-25 22:20:41 jettero Exp $
+
+use strict;
+use Test;
+use Statistics::Basic::Mode;
+
+plan tests => 6;
+
+my  $sbm = new Statistics::Basic::Mode([1..3]);
+
+ok( $sbm->query == 1 );
+
+    $sbm->insert( 3 );
+ok( $sbm->query == 3 );
+
+    $sbm->set_size( 5 );
+ok( $sbm->query == 3 );
+
+    $sbm->ginsert( 2 );
+ok( $sbm->query == 3 );
+
+    $sbm->set_vector( [2, 3..5, 7, 0, 0] );
+ok( $sbm->query == 0 );
+
+my  $j = new Statistics::Basic::Mode;
+    $j->set_vector( [1, 2, 3, 3, 3, 2] );
+ok( $j->query == 3 );
