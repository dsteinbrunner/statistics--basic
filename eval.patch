diff --git a/Basic.pm b/Basic.pm
index 86c9158..915aa78 100644
--- a/Basic.pm
+++ b/Basic.pm
@@ -44,18 +44,18 @@ our %EXPORT_TAGS = ( all => \@EXPORT_OK );
 
 1;
 
-sub computed { my $r = eval { ref($_[0]) ? Statistics::Basic::ComputedVector->new( $_[0] )   : Statistics::Basic::ComputedVector->new( [@_] );   }; croak $@ if $@; $r }
+sub computed { my $r = eval { ref($_[0]) ? Statistics::Basic::ComputedVector->new( $_[0] )   : Statistics::Basic::ComputedVector->new( [@_] );   }; croak $@ unless ref $r; $r }
 
-sub vector   { my $r = eval { ref($_[0]) ? Statistics::Basic::Vector->new( $_[0] )   : Statistics::Basic::Vector->new( [@_] );   }; croak $@ if $@; $r }
-sub mean     { my $r = eval { ref($_[0]) ? Statistics::Basic::Mean->new( $_[0] )     : Statistics::Basic::Mean->new( [@_] );     }; croak $@ if $@; $r }
-sub median   { my $r = eval { ref($_[0]) ? Statistics::Basic::Median->new( $_[0] )   : Statistics::Basic::Median->new( [@_] );   }; croak $@ if $@; $r }
-sub mode     { my $r = eval { ref($_[0]) ? Statistics::Basic::Mode->new( $_[0] )     : Statistics::Basic::Mode->new( [@_] );     }; croak $@ if $@; $r }
-sub variance { my $r = eval { ref($_[0]) ? Statistics::Basic::Variance->new( $_[0] ) : Statistics::Basic::Variance->new( [@_] ); }; croak $@ if $@; $r }
-sub stddev   { my $r = eval { ref($_[0]) ? Statistics::Basic::StdDev->new( $_[0] )   : Statistics::Basic::StdDev->new( [@_] );   }; croak $@ if $@; $r }
+sub vector   { my $r = eval { ref($_[0]) ? Statistics::Basic::Vector->new( $_[0] )   : Statistics::Basic::Vector->new( [@_] );   }; croak $@ unless ref $r; $r }
+sub mean     { my $r = eval { ref($_[0]) ? Statistics::Basic::Mean->new( $_[0] )     : Statistics::Basic::Mean->new( [@_] );     }; croak $@ unless ref $r; $r }
+sub median   { my $r = eval { ref($_[0]) ? Statistics::Basic::Median->new( $_[0] )   : Statistics::Basic::Median->new( [@_] );   }; croak $@ unless ref $r; $r }
+sub mode     { my $r = eval { ref($_[0]) ? Statistics::Basic::Mode->new( $_[0] )     : Statistics::Basic::Mode->new( [@_] );     }; croak $@ unless ref $r; $r }
+sub variance { my $r = eval { ref($_[0]) ? Statistics::Basic::Variance->new( $_[0] ) : Statistics::Basic::Variance->new( [@_] ); }; croak $@ unless ref $r; $r }
+sub stddev   { my $r = eval { ref($_[0]) ? Statistics::Basic::StdDev->new( $_[0] )   : Statistics::Basic::StdDev->new( [@_] );   }; croak $@ unless ref $r; $r }
 
-sub covariance     { my $r = eval { Statistics::Basic::Covariance->new( $_[0],$_[1] ) };     croak $@ if $@; $r}
-sub correlation    { my $r = eval { Statistics::Basic::Correlation->new( $_[0],$_[1] ) };    croak $@ if $@; $r}
-sub leastsquarefit { my $r = eval { Statistics::Basic::LeastSquareFit->new( $_[0],$_[1] ) }; croak $@ if $@; $r}
+sub covariance     { my $r = eval { Statistics::Basic::Covariance->new( $_[0],$_[1] ) };     croak $@ unless ref $r; $r}
+sub correlation    { my $r = eval { Statistics::Basic::Correlation->new( $_[0],$_[1] ) };    croak $@ unless ref $r; $r}
+sub leastsquarefit { my $r = eval { Statistics::Basic::LeastSquareFit->new( $_[0],$_[1] ) }; croak $@ unless ref $r; $r}
 
 *average = *mean;
 *avg     = *mean;
diff --git a/Basic/ComputedVector.pm b/Basic/ComputedVector.pm
index 04bb4a8..3fd46cc 100644
--- a/Basic/ComputedVector.pm
+++ b/Basic/ComputedVector.pm
@@ -16,7 +16,7 @@ sub new {
     my $that  = shift;
 
     if( defined $that ) {
-        $that = eval { Statistics::Basic::Vector->new($that) }; croak $@ if $@;
+        $that = eval { Statistics::Basic::Vector->new($that) }; croak $@ unless ref $that;
     }
     croak "input vector must be supplied to ComputedVector" unless defined $that;
 
@@ -24,7 +24,7 @@ sub new {
        $this->recalc;
 
     if( $_[0] ) {
-        eval { $this->set_computer(@_) }; croak $@ if $@;
+        my $r = eval { $this->set_computer(@_); 1 }; croak $@ unless $r;
     }
 
     $this;
diff --git a/Basic/Correlation.pm b/Basic/Correlation.pm
index c382534..adecda0 100644
--- a/Basic/Correlation.pm
+++ b/Basic/Correlation.pm
@@ -19,8 +19,8 @@ use overload
 # new {{{
 sub new {
     my $this = shift;
-    my $v1   = eval { Statistics::Basic::Vector->new( shift ) }; croak $@ if $@;
-    my $v2   = eval { Statistics::Basic::Vector->new( shift ) }; croak $@ if $@;
+    my $v1   = eval { Statistics::Basic::Vector->new( shift ) }; croak $@ unless ref $v1;
+    my $v2   = eval { Statistics::Basic::Vector->new( shift ) }; croak $@ unless ref $v2;
 
     $this = bless {}, $this;
 
@@ -128,8 +128,8 @@ sub set_size {
     my $this = shift;
     my $size = shift;
 
-    eval { $this->{sd1}->set_size( $size );
-           $this->{sd2}->set_size( $size ); }; croak $@ if $@;
+    my $r = eval { $this->{sd1}->set_size( $size );
+                   $this->{sd2}->set_size( $size ); 1}; croak $@ unless $r;
 }
 # }}}
 # insert {{{
diff --git a/Basic/Covariance.pm b/Basic/Covariance.pm
index 8872549..eed420a 100644
--- a/Basic/Covariance.pm
+++ b/Basic/Covariance.pm
@@ -19,8 +19,8 @@ use overload
 # new {{{
 sub new {
     my $class = shift;
-    my $v1    = eval { Statistics::Basic::Vector->new( $_[0] ) }; croak $@ if $@;
-    my $v2    = eval { Statistics::Basic::Vector->new( $_[1] ) }; croak $@ if $@;
+    my $v1    = eval { Statistics::Basic::Vector->new( $_[0] ) }; croak $@ unless ref $v1;
+    my $v2    = eval { Statistics::Basic::Vector->new( $_[1] ) }; croak $@ unless ref $v2;
 
     warn "[new covariance v1:$v1 v2:$v2]\n" if $ENV{DEBUG} >= 2;
 
@@ -29,8 +29,8 @@ sub new {
     my $c = $v1->get_linked_computer( covariance => $v2 );
     return $c if $c;
 
-    $this->{m1} = eval { Statistics::Basic::Mean->new($v1) }; croak $@ if $@;
-    $this->{m2} = eval { Statistics::Basic::Mean->new($v2) }; croak $@ if $@;
+    $this->{m1} = eval { Statistics::Basic::Mean->new($v1) }; croak $@ unless ref $this->{m1};
+    $this->{m2} = eval { Statistics::Basic::Mean->new($v2) }; croak $@ unless ref $this->{m2};
 
     $v1->set_linked_computer( covariance => $this, $v2 );
     $v2->set_linked_computer( covariance => $this, $v1 );
@@ -137,8 +137,8 @@ sub set_size {
     my $this = shift;
     my $size = shift;
 
-    eval { $this->{v1}->set_size( $size );
-           $this->{v2}->set_size( $size ); }; croak $@ if $@;
+    my $r = eval { $this->{v1}->set_size( $size );
+                   $this->{v2}->set_size( $size ); 1}; croak $@ unless $r;
 }
 # }}}
 # insert {{{
diff --git a/Basic/LeastSquareFit.pm b/Basic/LeastSquareFit.pm
index b906d2b..d488562 100644
--- a/Basic/LeastSquareFit.pm
+++ b/Basic/LeastSquareFit.pm
@@ -20,8 +20,8 @@ use overload
 # new {{{
 sub new {
     my $this = shift;
-    my $v1   = eval { Statistics::Basic::Vector->new( shift ) }; croak $@ if $@;
-    my $v2   = eval { Statistics::Basic::Vector->new( shift ) }; croak $@ if $@;
+    my $v1   = eval { Statistics::Basic::Vector->new( shift ) }; croak $@ unless ref $v1;
+    my $v2   = eval { Statistics::Basic::Vector->new( shift ) }; croak $@ unless ref $v2;
 
     $this = bless {}, $this;
 
@@ -149,7 +149,8 @@ sub x_given_y {
     my ($alpha, $beta) = $this->query;
     my $y = shift;
 
-    my $x = eval { ( ($y-$alpha)/$beta ) }; croak $@ if $@;
+    my $x;
+    my $r = eval { $x = ( ($y-$alpha)/$beta ); 1}; croak $@ unless $r;
     return $x;
 }
 # }}}
@@ -166,8 +167,8 @@ sub set_size {
     my $this = shift;
     my $size = shift;
 
-    eval { $this->{vrx}->set_size( $size );
-           $this->{vry}->set_size( $size ); }; croak $@ if $@;
+    my $r = eval { $this->{vrx}->set_size( $size );
+                   $this->{vry}->set_size( $size ); 1}; croak $@ unless $r;
 }
 # }}}
 # insert {{{
diff --git a/Basic/Mean.pm b/Basic/Mean.pm
index fc4cb3f..c641aa3 100644
--- a/Basic/Mean.pm
+++ b/Basic/Mean.pm
@@ -23,7 +23,7 @@ sub new {
     warn "[new mean]\n" if $ENV{DEBUG} >= 2;
 
     my $this   = bless {}, $class;
-    my $vector = eval { Statistics::Basic::Vector->new(@_) }; croak $@ if $@;
+    my $vector = eval { Statistics::Basic::Vector->new(@_) }; croak $@ unless ref $vector;
     my $c      = $vector->get_computer("mean"); return $c if defined $c;
 
     $this->{v} = $vector;
@@ -89,7 +89,7 @@ sub set_size {
     my $this = shift;
     my $size = shift;
 
-    eval { $this->{v}->set_size($size) }; croak $@ if $@;
+    my $r = eval { $this->{v}->set_size($size); 1}; croak $@ unless $r;
 }
 # }}}
 # set_vector {{{
diff --git a/Basic/Median.pm b/Basic/Median.pm
index eb21d4a..e9978ec 100644
--- a/Basic/Median.pm
+++ b/Basic/Median.pm
@@ -23,7 +23,7 @@ sub new {
     warn "[new median]\n" if $ENV{DEBUG} >= 2;
 
     my $this   = bless {}, $class;
-    my $vector = eval { Statistics::Basic::Vector->new(@_) }; croak $@ if $@;
+    my $vector = eval { Statistics::Basic::Vector->new(@_) }; croak $@ unless ref $vector;
     my $c      = $vector->get_computer("median"); return $c if defined $c;
 
     $this->{v} = $vector;
@@ -94,7 +94,7 @@ sub set_size {
     my $this = shift;
     my $size = shift;
 
-    eval { $this->{v}->set_size($size) }; croak $@ if $@;
+    my $r = eval { $this->{v}->set_size($size); 1}; croak $@ unless $r;
 }
 # }}}
 # set_vector {{{
diff --git a/Basic/Mode.pm b/Basic/Mode.pm
index 156c2e2..86677f4 100644
--- a/Basic/Mode.pm
+++ b/Basic/Mode.pm
@@ -29,7 +29,7 @@ sub new {
     warn "[new median]\n" if $ENV{DEBUG} >= 2;
 
     my $this   = bless {}, $class;
-    my $vector = eval { Statistics::Basic::Vector->new(@_) }; croak $@ if $@;
+    my $vector = eval { Statistics::Basic::Vector->new(@_) }; croak $@ unless ref $vector;
     my $c      = $vector->get_computer("mode"); return $c if defined $c;
 
     $this->{v} = $vector;
@@ -109,7 +109,7 @@ sub set_size {
     my $this = shift;
     my $size = shift;
 
-    eval { $this->{v}->set_size($size) }; croak $@ if $@;
+    my $r = eval { $this->{v}->set_size($size); 1}; croak $@ unless $r;
 }
 # }}}
 # set_vector {{{
diff --git a/Basic/StdDev.pm b/Basic/StdDev.pm
index 8f1ba3d..508cffb 100644
--- a/Basic/StdDev.pm
+++ b/Basic/StdDev.pm
@@ -23,7 +23,7 @@ sub new {
     warn "[new stddev]\n" if $ENV{DEBUG} >= 2;
 
     my $this     = bless {}, $class;
-    my $variance = $this->{V} = eval { Statistics::Basic::Variance->new(@_) }; croak $@ if $@;
+    my $variance = $this->{V} = eval { Statistics::Basic::Variance->new(@_) }; croak $@ unless ref $variance;
     my $vector   = $variance->query_vector;
     my $c        = $vector->get_computer( 'stddev' ); return $c if defined $c;
 
@@ -100,7 +100,7 @@ sub set_size {
     my $this = shift;
     my $size = shift;
 
-    eval { $this->{V}->set_size( $size ) }; croak $@ if $@;
+    my $r = eval { $this->{V}->set_size( $size ); 1}; croak $@ unless $r;
 }
 # }}}
 # insert {{{
diff --git a/Basic/Variance.pm b/Basic/Variance.pm
index e830c95..867bb58 100644
--- a/Basic/Variance.pm
+++ b/Basic/Variance.pm
@@ -23,11 +23,11 @@ sub new {
     warn "[new variance]\n" if $ENV{DEBUG} >= 2;
 
     my $this   = bless {}, $class;
-    my $vector = eval { Statistics::Basic::Vector->new(shift, @_) }; croak $@ if $@;
+    my $vector = eval { Statistics::Basic::Vector->new(shift, @_) }; croak $@ unless ref $vector;
     my $c      = $vector->get_computer("variance"); return $c if defined $c;
 
     $this->{v} = $vector;
-    $this->{m} = eval { Statistics::Basic::Mean->new($vector, @_) }; croak $@ if $@;
+    $this->{m} = eval { Statistics::Basic::Mean->new($vector, @_) }; croak $@ unless ref $this->{m};
 
     $vector->set_computer( variance => $this );
 
@@ -105,7 +105,7 @@ sub set_size {
     my $this = shift;
     my $size = shift;
 
-    eval { $this->{v}->set_size( $size ) }; croak $@ if $@;
+    my $r = eval { $this->{v}->set_size( $size ); 1}; croak $@ unless $r;
 }
 # }}}
 # insert {{{
